@import "../../scss/index";

$local-icon-size: 12px;

.button {
  outline: none;
  text-decoration: none;
  box-sizing: border-box;
  font-weight: 400;
  text-align: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  user-select: none;

  @include animate(background-color, opacity, border-color);

  &_disabled {
    opacity: 0.4;
    pointer-events: none;
  }

  &_link {
    display: inline-flex;
  }

  &_full {
    display: flex;
    width: 100%;
  }


  &_bordered {
    border-radius: $global-border-radius;
    border: 1px solid white;
  }

  &_size {
    &_xxl {
      @include buttonText;
      padding: 19px;
      height: 70px;
      min-width: 60px;
    }
    &_xl {
      @include buttonText;
      padding: 19px;
      height: 60px;
      min-width: 60px;
    }
    &_classic {
      @include buttonText;
      padding: 19px;
      height: 60px;
      min-width: 342px;
    }

  }

  &_type {
    &_accent {
      @include colorWhite;
      box-shadow: 0 0 40px 40px $global-color-accent-text inset, 0 0 0 0 $global-color-accent-text;
      border-color: $global-color-accent-text;
      -webkit-transition: all 150ms ease-in-out;
      transition: all 150ms ease-in-out;
      &:active, &:hover {
        color: black;
        box-shadow: 0 0 10px 0 $global-color-accent-text inset, 0 0 6px 0px $global-color-accent-text;
      }

      &:hover:not(.button_disabled) {
        cursor: pointer;
      }
    }

    &_accent-grey {
      //@include backgroundGreyAccent;
      @include colorBlack;
      transition: all 150ms ease-in-out;
      box-shadow: 0 0 40px 40px $global-color-grey-accent inset, 0 0 0 0 $global-color-grey-accent;
      border-color: $global-color-grey-accent;

      &:active,
      &:hover {
        cursor:pointer;
        box-shadow: 0 0 5px 5px $global-color-grey-accent inset, 0 0 6px 0 $global-color-grey-accent;
        background-color: white;
      }
    }
    &_grey {
      @include backgroundGrey;
      @include colorBlack;

      &:active {
      }

      &:hover:not(.button_disabled) {
        cursor: pointer;
      }
    }
    &_black {
      @include backgroundBlack;
      @include colorWhite;

      &:active {
      }

      &:hover:not(.button_disabled) {
        cursor: pointer;
      }
    }

    &_white {
      @include backgroundWhite;
      @include colorBlack;
      border: 2px solid $global-color-grey;

      &:active {

      }

      &:hover:not(.button_disabled) {

        cursor: pointer;
      }
    }

    &_blue {
      @include backgroundBlue;
      @include colorWhite;

      &:active {
      }

      &:hover:not(.button_disabled) {
        cursor: pointer;
      }
    }

    &_dark-grey {
      @include backgroundGreyDark;
      @include colorWhite;

      &:active {
      }

      &:hover:not(.button_disabled) {
        cursor: pointer;
      }
    }
  }

  &__item {
    display: flex;
    margin-right: 8px;
    opacity: 1;

    &:last-child {
      margin-right: 0;
    }

  }
  //transition: tranform 0.5s ease-in-out;
  //&:active{
  //  transform: scale(1.005);
  //  transition: tranform 0.5s ease-in-out;
  //}

}
.third {
  border-color: #3498db;
  color: #fff;
  box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;
  -webkit-transition: all 150ms ease-in-out;
  transition: all 150ms ease-in-out;
}
.third:hover {
  box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;
}