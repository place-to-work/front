@import './variables';
@import "./includeMedia";

// Основной цвет
@mixin colorAccent {
  color: $global-color-accent;
}

@mixin colorGreyAccent {
  color: $global-color-grey-accent;
}

@mixin colorGreyDark {
  color: $global-color-grey-dark;
}

@mixin colorGrey {
  color: $global-color-grey;
}

@mixin colorWhite {
  color: $global-color-white;
}

@mixin colorBlack {
  color: $global-color-black;
}

@mixin colorBlue {
  color: $global-color-blue;
}


//Фон
@mixin backgroundAccent {
  background-color: $global-color-accent;
}

@mixin backgroundGreyAccent {
  background-color: $global-color-grey-accent;
}

@mixin backgroundGreyDark {
  background-color: $global-color-grey-dark;
}

@mixin backgroundGrey {
  background-color: $global-color-grey;
}

@mixin backgroundWhite {
  background-color: $global-color-white;
}

@mixin backgroundBlack {
  background-color: $global-color-black;
}

@mixin backgroundBlue {
  background-color: $global-color-blue;
}


//Для начертания Regular
@mixin textWeight400 {
  font-weight: 400;
}

//Для начертания ExtraRegular
@mixin textWeight500 {
  font-weight: 500;
}

//Для начертания SemiBold
@mixin textWeight600 {
  font-weight: 600;
}

//Для начертания Bold
@mixin textWeight700 {
  font-weight: 700;
}

@mixin media($conditions...) {
  // scss-lint:disable SpaceAroundOperator
  @if ($im-media-support and length($conditions) == 0) or
    (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {
    @content;
  }

  @else if ($im-media-support and length($conditions) > 0) {
    @media #{unquote(parse-expression(nth($conditions, 1)))} {
      // Recursive call
      @include media(slice($conditions, 2)...) {
      @content;
    }
    }
  }
}

//Media Queries

@mixin midget {
  @include media("<=sm") {
    @content;
  }
}

@mixin phone {
  @include media("<md") {
    @content;
  }
}

@mixin tablet {
  @include media(">=md", "<=lg") {
    @content;
  }
}

@mixin desktop-small {
  @include media(">=xxlg", "<xxxlg") {
    @content;
  }
}

@mixin desktop-tiny {
  @include media(">=lg", "<xxlg") {
    @content;
  }
}

@mixin lg-device {
  @include media(">=lg", "<=1345px") {
    @content;
  }
}

@mixin lessThanTablet {
  @include media("<=lg") {
    @content;
  }
}

@mixin largerThanPhone {
  @include media(">=md") {
    @content;
  }
}


// Шрифты
@mixin OpenSans {
  //font-family: "Open Sans", sans-serif;
  font-family: "GT Walsheim Pro", "Open Sans", sans-serif;
}
// Шрифты
@mixin Walsheim {
  font-family: "GT Walsheim Pro", "Open Sans", sans-serif;
}


$line-height-coefficient: 1.4;

@mixin fontSize($font-size, $font-size-min) {
  @include Walsheim;

  font-size: $font-size;
  line-height: $line-height-coefficient;
  min-height: $line-height-coefficient * $font-size;

  @include midget {
    font-size: $font-size-min;
    min-height: $line-height-coefficient * $font-size-min;
  }

}

@mixin buttonText {
  @include textWeight600;
  @include fontSize($button-font-size, $button-font-min-size);
}

@mixin textH1 {
  @include textWeight700;
  @include fontSize($global-h1-font-size, $global-h2-font-size);
}
@mixin textH2 {
  @include textWeight700;
  @include fontSize($global-h2-font-size, $global-h3-font-size);
}
@mixin textH3 {
  @include textWeight700;
  @include fontSize($global-h3-font-size, $global-h4-font-size);
}
@mixin textH4 {
  @include textWeight400;
  @include fontSize($global-h4-font-size, $global-h5-font-size);
}
@mixin textH5 {
  @include textWeight400;
  @include fontSize($global-h5-font-size, $global-h6-font-size);
}
@mixin textH6 {
  @include textWeight400;
  @include fontSize($global-h6-font-size, $global-h6-min-font-size);
}

@mixin text-link-base {
  text-decoration: underline;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }

  &:active {
    text-decoration: none;
  }

  &:visited {
  }
}



@mixin animate($property...) {
  $transition-normal: 0.2s ease-out;
  $animated-property: #{""};

  @if length($property) > 1 {
    @for $i from 1 through length($property)-1 {
      $animated-property: $animated-property
      nth($property, $i)
      $transition-normal
      #{", "};
    }
  }

  transition: $animated-property nth($property, length($property))
  $transition-normal;
}



// Позиционирование

@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin square($side) {
  width: $side;
  height: $side;
}

@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin visualCenter($top: -2px) {
  position: relative;
  top: $top;
}

@mixin loaderPage {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 100px;
}

@mixin backgroundImage($url, $size: contain) {
  background: url($url) no-repeat center;
  background-size: $size;
}